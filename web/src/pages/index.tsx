import { FormEvent, useEffect, useReducer, useRef, useState } from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import { v4 } from 'uuid';

import { list } from '../functions/list';
import dayjs from 'dayjs';

type Note = {
  id: string;
  title: string;
  description: string;
  createdAt: Date;
};

const Home: NextPage = () => {
  const titleRef = useRef<HTMLInputElement>(null);
  const descriptionRef = useRef<HTMLTextAreaElement>(null);

  const [notes, setNotes] = useState<Note[]>([]);

  useEffect(() => {
    const data = list();

    setNotes(data || []);
  }, []);

  const [isCreate, onIsCreateChange] = useReducer((prev) => !prev, false);

  const handleSubmit = (e: FormEvent) => {
    e.preventDefault();

    const data: Note = {
      id: v4(),
      title: titleRef.current!.value,
      description: descriptionRef.current!.value,
      createdAt: new Date(),
    };

    const all = list();

    const setData = all ? [...all, data] : [data];

    window.localStorage.setItem('@rythym:notes', JSON.stringify(setData));

    onIsCreateChange();

    setNotes(list());
  };

  return (
    <>
      <Head>
        <title>Rythym</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className="min-h-screen h-auto bg-black">
        <section className="max-w-4xl h-full mx-auto">
          <header className="flex items-center justify-between h-20">
            <h1 className="font-semibold">GOOD NIGHT</h1>
            <p className="text-xs">ANDRES DOS SANTOS</p>
          </header>

          {isCreate ? (
            <form
              className="flex flex-col w-full h-4/5 space-y-5"
              onSubmit={handleSubmit}
            >
              <input
                type="text"
                className="bg-inherit h-10 w-full placeholder:font-normal text-sm"
                placeholder="Title"
                autoFocus
                ref={titleRef}
              />
              <textarea
                className="bg-inherit w-full h-full resize-none text-xs"
                placeholder="Description"
                ref={descriptionRef}
              />

              <footer className="flex items-center justify-between w-full">
                <button
                  type="button"
                  className="h-12 w-28 border bg-inherit text-white text-xs font-semibold rounded-full"
                  onClick={onIsCreateChange}
                >
                  BACK
                </button>

                <button
                  type="submit"
                  className="h-12 w-28 bg-white text-black text-xs font-semibold rounded-full"
                >
                  CREATE
                </button>
              </footer>
            </form>
          ) : (
            <>
              <button
                type="submit"
                className="h-12 w-28 bg-white text-black text-xs font-semibold rounded-full"
                onClick={onIsCreateChange}
              >
                NEW NOTE
              </button>

              <h1 className="mt-10 mb-5 font-semibold">Your Notes</h1>

              <ol className="flex flex-col-reverse">
                {notes.map((item, index) => (
                  <li key={`${item.title}-${index}`} className="space-y-2 my-3">
                    <div>
                      <h1 className="text-xs font-semibold uppercase mb-2">
                        {item.title}
                      </h1>
                      <p className="text-xs text-gray-400">
                        {item.description}
                      </p>
                    </div>
                    <p className="text-xs text-blue-500">
                      {dayjs(item.createdAt).format('MMMM DD, YYYY')}
                    </p>

                    <div className="h-[2px] w-20 mt-2 bg-gray-100 rounded-full" />
                  </li>
                ))}
              </ol>
            </>
          )}
        </section>
      </main>
    </>
  );
};

export default Home;
